{"version":3,"sources":["webpack:///./sass/main.scss","webpack:///./sass/base/_fonts.scss","webpack:///./sass/base/_colors.scss","webpack:///./sass/base/_basic.scss","webpack:///./sass/components/_global.scss","webpack:///./sass/mixins/_flex.scss","webpack:///./sass/components/_buttons.scss","webpack:///./sass/mixins/_fonts.scss","webpack:///./sass/mixins/_breakpoint.scss","webpack:///./sass/components/_cards.scss","webpack:///./sass/components/_header.scss","webpack:///./sass/components/_jokes.scss"],"names":[],"mappings":"AAAA;2CAAA;ACAA;AACA;EACE;EACA;EACA;EACA;EAA6D;EAC7D;EAWmB;CDNrB;ACSA;AACA;EACE;EACA;EACA;EACA;EAA2D;EAC3D;EAWmB;CDhBrB;ACmBA;AACA;EACE;EACA;EACA;EACA;EAA+D;EAC/D;EAYmB;CD3BrB;AC8BA;AACA;EACE;EACA;EACA;EACA;EAA2D;EAC3D;EAWmB;CDrCrB;ACwCA;AACA;EACE;EACA;EACA;EACA;EAA2D;EAC3D;EAWmB;CD/CrB;ACkDA;AACA;EACE;EACA;EACA;EACA;EAA2D;EAC3D;EAWmB;CDzDrB;AE7DA;;EAAA;AAIA;AAIA;ACRA;AAEA;;EAEE;EACA;EACA,0BDGgB;ECFhB;EACA;EACA;EACA;CHmEF;;AGhEA;EACE;CHmEF;;AGhEA;EACE;CHmEF;;AGhEA;EACE;EACA;CHmEF;;AGhEA;EACE;CHmEF;;AGhEA;EACE;CHmEF;;AGhEA;;;EAGE;CHmEF;;AAlGA;2CAAA;AAMA;2CAAA;AIZA;EACE;EACA;EACA;CJ+GF;AI7GE;EALF;IAMI;ICCA;IAUA,oBDVwC;ICkBxC,wBDlBwB;GJkH1B;CACF;;AI/GA;EACE;CJkHF;AIhHE;EACE;KAAA;EACA;KAAA;EACA;EACA;CJkHJ;;AMpIA;EACE;EDME;EAUA,oBCfsC;EDuBtC,wBCvBsB;EACxB,oBJMgB;EKeZ;EAOF,iBDxBS;EC4BT,kBD7BO;ECiCP,0BD/BY;EAEd,eJCW;EIAX;EACA;EACA;EACA;CNuIF;AMrIE;EACE;CNuIJ;AQzHI;EF/BJ;IAqBI;GNuIF;CACF;AQ9HI;EF/BJ;IAyBI;GNwIF;CACF;;AMrIA;EACE;EACA;ECPI;EAOF,iBDC+C;ECG/C,gBDHgC;EAClC,eJtBW;EIuBX;EACA;EACA;CN0IF;AQ/II;EFFJ;IAUI;GN2IF;CACF;AMxII;EACE;EACA,oBJlCO;EImCP;EACA;EACA;EACA;CN0IN;;AMrIA;EACE;EACA;EACA;CNwIF;;ASjMA;EACE,oBPIY;EOHZ;EACA;EACA;EACA;EACA;EAGA;CToMF;AQ9KI;EC/BJ;IAYI;GTqMF;CACF;;ASlMA;EJTI;EAUA;EAQA,+BIRsB;EACxB;EACA;CTuMF;AQ3LI;ECfJ;IAMI;GTwMF;CACF;;ASrMA;EACE;EFHI;EAWF,kBEPgC;EFmBhC,oBEnBqD;EACvD;EACA;CT0MF;;AQzMI;ECEJ;IAEI;GT0MF;CACF;;ASvMA;EACE;EACA;CT0MF;ASxME;EFnBI;EAWF,kBESkC;EFGlC,oBEHuD;EACvD,ePlCS;EOmCT;CT4MJ;ASzME;EAVF;IAWI;IACA;GT4MF;CACF;;ASzMA;EJhDI;EAOA,uBI0CwB;EJvCxB,oBIuC0D;EJ/B1D,wBI+B0C;EAC5C;EACA;EACA;EFnCI;EAWF,kBEyBgC;EAClC,ePlDW;CFkQb;AS9ME;EACE;EACA;CTgNJ;;AUjRA;ELOI;EAUA,oBKhB6C;ELwB7C,+BKxBsB;CVsR1B;AQxPI;EE/BJ;IAII;GVuRF;CACF;;AUpRA;EACE;EACA;EACA;EACA;EACA;EACA;CVuRF;AQtQI;EEvBJ;IASI;GVwRF;CACF;;AUrRA;EHGM;EAWF,kBGbgC;EHyBhC,oBGzBqD;EACvD;CV0RF;AQlRI;EEVJ;IAKI;IACA;GV2RF;CACF;AUzRE;EACE;CV2RJ;;AUvRA;EHXM;EAWF,kBGC+B;EACjC;EACA,eR5BkB;EQ6BlB;CV2RF;;AWlUA;EACE;EACA;CXqUF;;AWlUA;EACE;EACA,oBTKe;EKYX;EAWF,kBI3BgC;EAClC,eTEW;ESDX;EACA;EACA;EACA;CXsUF;AWpUE;EACE;EACA,oBTLa;ESMb;EACA;EACA;EACA;EACA;EACA;EACA;CXsUJ;AWnUE;EAEE;CXoUJ;AWjUE;EAEE;CXkUJ;;AW9TA;EACE;EACA;ENjCE;EAUA,oBMwBsC;ENhBtC,wBMgBsB;EACxB,oBTrCY;ESsCZ;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;CXmUF;AWjUE;EACE;CXmUJ;AWhUE;;EAEE;EACA;CXkUJ;AW/TE;EACE;CXiUJ;AW9TE;EACE;CXgUJ;AW5TI;EACE;CX8TN;AW3TI;EACE","file":"dist/main.css","sourcesContent":["/*\t1\tBase\n-----------------------------------------*/\n@import 'base/fonts';\n@import 'base/colors';\n@import 'base/basic';\n\n/*\t2\tMixins\n-----------------------------------------*/\n@import 'mixins/breakpoint';\n@import 'mixins/flex';\n@import 'mixins/fonts';\n\n/*\t3\tComponents\n-----------------------------------------*/\n@import 'components/global';\n@import 'components/buttons';\n@import 'components/cards';\n@import 'components/header';\n@import 'components/jokes';\n","/* ranchers-regular - latin */\n@font-face {\n  font-family: 'Ranchers';\n  font-style: normal;\n  font-weight: 400;\n  src: url('../fonts/ranchers/ranchers-v8-latin-regular.eot'); /* IE9 Compat Modes */\n  src: local(''),\n    url('../fonts/ranchers/ranchers-v8-latin-regular.eot?#iefix')\n      format('embedded-opentype'),\n    /* IE6-IE8 */ url('../fonts/ranchers/ranchers-v8-latin-regular.woff2')\n      format('woff2'),\n    /* Super Modern Browsers */\n      url('../fonts/ranchers/ranchers-v8-latin-regular.woff') format('woff'),\n    /* Modern Browsers */ url('../fonts/ranchers/ranchers-v8-latin-regular.ttf')\n      format('truetype'),\n    /* Safari, Android, iOS */\n      url('../fonts/ranchers/ranchers-v8-latin-regular.svg#Ranchers')\n      format('svg'); /* Legacy iOS */\n}\n\n/* work-sans-300 - latin */\n@font-face {\n  font-family: 'Work Sans';\n  font-style: normal;\n  font-weight: 300;\n  src: url('../fonts/work-sans/work-sans-v9-latin-300.eot'); /* IE9 Compat Modes */\n  src: local(''),\n    url('../fonts/work-sans/work-sans-v9-latin-300.eot?#iefix')\n      format('embedded-opentype'),\n    /* IE6-IE8 */ url('../fonts/work-sans/work-sans-v9-latin-300.woff2')\n      format('woff2'),\n    /* Super Modern Browsers */\n      url('../fonts/work-sans/work-sans-v9-latin-300.woff') format('woff'),\n    /* Modern Browsers */ url('../fonts/work-sans/work-sans-v9-latin-300.ttf')\n      format('truetype'),\n    /* Safari, Android, iOS */\n      url('../fonts/work-sans/work-sans-v9-latin-300.svg#WorkSans')\n      format('svg'); /* Legacy iOS */\n}\n\n/* work-sans-regular - latin */\n@font-face {\n  font-family: 'Work Sans';\n  font-style: normal;\n  font-weight: 400;\n  src: url('../fonts/work-sans/work-sans-v9-latin-regular.eot'); /* IE9 Compat Modes */\n  src: local(''),\n    url('../fonts/work-sans/work-sans-v9-latin-regular.eot?#iefix')\n      format('embedded-opentype'),\n    /* IE6-IE8 */ url('../fonts/work-sans/work-sans-v9-latin-regular.woff2')\n      format('woff2'),\n    /* Super Modern Browsers */\n      url('../fonts/work-sans/work-sans-v9-latin-regular.woff') format('woff'),\n    /* Modern Browsers */\n      url('../fonts/work-sans/work-sans-v9-latin-regular.ttf')\n      format('truetype'),\n    /* Safari, Android, iOS */\n      url('../fonts/work-sans/work-sans-v9-latin-regular.svg#WorkSans')\n      format('svg'); /* Legacy iOS */\n}\n\n/* work-sans-500 - latin */\n@font-face {\n  font-family: 'Work Sans';\n  font-style: normal;\n  font-weight: 500;\n  src: url('../fonts/work-sans/work-sans-v9-latin-500.eot'); /* IE9 Compat Modes */\n  src: local(''),\n    url('../fonts/work-sans/work-sans-v9-latin-500.eot?#iefix')\n      format('embedded-opentype'),\n    /* IE6-IE8 */ url('../fonts/work-sans/work-sans-v9-latin-500.woff2')\n      format('woff2'),\n    /* Super Modern Browsers */\n      url('../fonts/work-sans/work-sans-v9-latin-500.woff') format('woff'),\n    /* Modern Browsers */ url('../fonts/work-sans/work-sans-v9-latin-500.ttf')\n      format('truetype'),\n    /* Safari, Android, iOS */\n      url('../fonts/xwork-sans/work-sans-v9-latin-500.svg#WorkSans')\n      format('svg'); /* Legacy iOS */\n}\n\n/* work-sans-600 - latin */\n@font-face {\n  font-family: 'Work Sans';\n  font-style: normal;\n  font-weight: 600;\n  src: url('../fonts/work-sans/work-sans-v9-latin-600.eot'); /* IE9 Compat Modes */\n  src: local(''),\n    url('../fonts/work-sans/work-sans-v9-latin-600.eot?#iefix')\n      format('embedded-opentype'),\n    /* IE6-IE8 */ url('../fonts/work-sans/work-sans-v9-latin-600.woff2')\n      format('woff2'),\n    /* Super Modern Browsers */\n      url('../fonts/work-sans/work-sans-v9-latin-600.woff') format('woff'),\n    /* Modern Browsers */ url('../fonts/work-sans/work-sans-v9-latin-600.ttf')\n      format('truetype'),\n    /* Safari, Android, iOS */\n      url('../fonts/work-sans/work-sans-v9-latin-600.svg#WorkSans')\n      format('svg'); /* Legacy iOS */\n}\n\n/* work-sans-700 - latin */\n@font-face {\n  font-family: 'Work Sans';\n  font-style: normal;\n  font-weight: 700;\n  src: url('../fonts/work-sans/work-sans-v9-latin-700.eot'); /* IE9 Compat Modes */\n  src: local(''),\n    url('../fonts/work-sans/work-sans-v9-latin-700.eot?#iefix')\n      format('embedded-opentype'),\n    /* IE6-IE8 */ url('../fonts/work-sans/work-sans-v9-latin-700.woff2')\n      format('woff2'),\n    /* Super Modern Browsers */\n      url('../fonts/work-sans/work-sans-v9-latin-700.woff') format('woff'),\n    /* Modern Browsers */ url('../fonts/work-sans/work-sans-v9-latin-700.ttf')\n      format('truetype'),\n    /* Safari, Android, iOS */\n      url('../fonts/work-sans/work-sans-v9-latin-700.svg#WorkSans')\n      format('svg'); /* Legacy iOS */\n}\n","/*\n* Color naming by: http://chir.ag/projects/name-that-color/\n*/\n\n/* Standard */\n$color-white: #ffffff;\n$color-black: #020202;\n\n/* Branding */\n$color-champagne: #fae7d4;\n$color-bay-of-many: #26547c;\n$color-gray: #5a5a5a;\n$color-alabasta: #f4f4f4;\n","/*-- Basic styles --*/\n\nhtml,\nbody {\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  position: relative;\n  background-color: $color-champagne;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n}\n\nhtml {\n  font-size: 62.5%;\n}\n\n* {\n  box-sizing: border-box;\n}\n\na {\n  text-decoration: none;\n  color: inherit;\n}\n\nfigure {\n  margin: 0;\n}\n\nimg {\n  vertical-align: bottom;\n}\n\ntextarea:focus,\ninput:focus,\nbutton:focus {\n  outline: none;\n}\n",".container {\n  padding: 5rem 0;\n  min-width: 100%;\n  min-height: 100%;\n\n  @media (min-height: 90rem) {\n    padding-top: 0;\n    @include flex($justify: center, $align: center);\n  }\n}\n\n.image-cover {\n  position: relative;\n\n  img {\n    object-fit: cover;\n    object-position: center;\n    width: 100%;\n    height: 100%;\n  }\n}\n","@mixin flex($dynamicDirection: false, $breakpoint: 'min-desktop', $flex: null, $direction: null, $align: null, $justify: baseline, $wrap: null, $self: null,$important: false) {\n  @if ($flex) {\n    display: $flex;\n  } \n  @if $important { \n    display: flex !important;\n  } @else { \n    display: flex;\n  }\n\n  @if ($wrap) {\n    flex-wrap: $wrap;\n  }\n  @if ($direction) {\n    flex-direction: $direction;\n  } \n  @if ($align != null) {\n    align-items: $align;\n\t} \n\t\n\t@if ($self != null) {\n    align-self: $self;\n  } \n\n  @if ($justify != baseline) {\n    justify-content: $justify;\n  } \n\n  @if ($dynamicDirection and $breakpoint) {\n    flex-direction: column;\n\n    @include breakpoint($breakpoint) {\n      flex-direction: row\n    }\n  }\n}\n",".btn {\n  cursor: pointer;\n  @include flex($justify: center, $align: center);\n  background: $color-champagne;\n  @include font(\n    'work-sans',\n    $size: 1.8rem,\n    $weight: 600,\n    $transform: uppercase\n  );\n  color: $color-gray;\n  padding: 2rem 4rem;\n  border: none;\n  border-bottom: 0.6rem solid #f2deca;\n  border-radius: 0.6rem;\n\n  &:hover {\n    border-bottom: 0.2rem solid #f2deca;\n  }\n\n  @include breakpoint('max-tablet-portrait') {\n    font-size: 1.6rem;\n  }\n\n  @include breakpoint('max-mobile') {\n    font-size: 1.4rem;\n  }\n}\n\n.btn--nav {\n  cursor: pointer;\n  background: transparent;\n  @include font('work-sans', $size: 2rem, $weight: 500);\n  color: $color-gray;\n  border: none;\n  padding: 1.5rem;\n  margin-left: 2rem;\n\n  @include breakpoint('max-mobile') {\n    font-size: 1.6rem;\n  }\n\n  &.is-active {\n    &:after {\n      content: '';\n      background: $color-gray;\n      display: block;\n      width: 40%;\n      height: 0.3rem;\n      margin: 0.5rem auto 0;\n    }\n  }\n}\n\n.btn__icon {\n  width: 2rem;\n  height: auto;\n  margin-right: 1.5rem;\n}\n","// Fonts\n$work-sans: 'Work Sans';\n$racnhers: 'Ranchers';\n\n// Fonts map\n$fonts: (\n  'work-sans': $work-sans,\n  'ranchers': $racnhers,\n) !default;\n\n// font mixin\n@mixin font(\n  $font,\n  $weight: null,\n  $size: null,\n  $transform: null,\n  $spacing: null,\n  $lineheight: null,\n  $important: null\n) {\n  @if map-has-key($fonts, $font) {\n    @if ($important==true) {\n      font-family: map-get($fonts, $font) !important;\n    } @else {\n      font-family: map-get($fonts, $font), sans-serif;\n    }\n  } @else {\n    @warn \"`#{$font}` is not a valid font, available fonts: #{map-keys($fonts)}.\";\n  }\n\n  @if $weight {\n    font-weight: $weight;\n  }\n\n  @if $size {\n    font-size: $size;\n  }\n\n  @if $transform {\n    text-transform: $transform;\n  }\n\n  @if $spacing {\n    letter-spacing: $spacing;\n  }\n\n  @if $lineheight {\n    line-height: $lineheight;\n  }\n}\n","$screen-mobile: screen and (min-width : 32.5em);\n$screen-tablet-portrait: screen and (min-width : 48em);\n$screen-tablet-landscape: screen and (min-width : 62em);\n$screen-desktop: screen and (min-width : 76.5em);\n$screen-desktop-large: screen and (min-width : 114em);\n$screen-max-mobile: screen and (max-width : 32.4375em);\n\n$screen-max-tablet-portrait: screen and (max-width : 47.9375em);\n$screen-max-tablet-landscape: screen and (max-width : 61.9375em);\n$screen-max-desktop: screen and (max-width : 76.4375em);\n$screen-max-desktop-large: screen and (max-width : 113.9375em);\n\n$screen-between-mobile-and-tablet-landscape: screen and (min-width : $screen-mobile) and (max-width: $screen-max-tablet-landscape);\n$screen-between-tablet-portrait-and-tablet-landscape: screen and (min-width : $screen-tablet-portrait) and (max-width: $screen-max-tablet-landscape);\n$screen-between-tablet-landscape-and-desktop: screen and (min-width: $screen-tablet-landscape) and (max-width: $screen-max-desktop);\n\n$breakpoints: (\n  'min-mobile'              : ( $screen-mobile ),\n  'min-tablet-portrait'     : ( $screen-tablet-portrait ),\n  'min-tablet-landscape'    : ( $screen-tablet-landscape ),\n  'min-desktop'             : ( $screen-desktop ),\n  'min-desktop-large'       : ( $screen-desktop-large ),\n  'max-mobile'              : ( $screen-max-mobile),\n  'max-tablet-portrait'     : ( $screen-max-tablet-portrait ),\n  'max-tablet-landscape'    : ( $screen-max-tablet-landscape ),\n  'max-desktop'             : ( $screen-max-desktop ),\n  'max-desktop-large'       : ( $screen-max-desktop-large ),\n) !default;\n\n@mixin breakpoint($breakpoint) {\n  @if map-has-key($breakpoints, $breakpoint) {\n    @media #{inspect(map-get($breakpoints, $breakpoint))} {\n      @content;\n    }\n  } @else {\n    @warn \"`#{$breakpoint}` is not a valid breakpoint, available breakpoints: #{map-keys($breakpoints)}.\";\n  }\n}\n",".card {\n  background: $color-white;\n  padding: 4rem;\n  width: 90%;\n  max-width: 80rem;\n  margin: 0 auto;\n  border-radius: 0.6rem;\n  -webkit-box-shadow: 0px 0px 25px 0px rgba(0, 0, 0, 0.05);\n  -moz-box-shadow: 0px 0px 25px 0px rgba(0, 0, 0, 0.05);\n  box-shadow: 0px 0px 25px 0px rgba(0, 0, 0, 0.05);\n\n  @include breakpoint('max-tablet-portrait') {\n    padding: 2rem;\n  }\n}\n\n.card__holder {\n  @include flex($justify: space-between, $align: center);\n  margin: 5rem 0;\n  min-height: 10rem;\n\n  @include breakpoint('max-tablet-landscape') {\n    flex-direction: column;\n  }\n}\n\n.card__message {\n  display: block;\n  @include font('work-sans', $size: 1.6rem, $lineheight: 2.4rem);\n  text-align: center;\n  margin: 2rem 0 4rem;\n}\n\n.card__nav {\n  @include breakpoint('max-tablet-landscape') {\n    margin-top: 4rem;\n  }\n}\n\n.card__view {\n  width: 90%;\n  margin: 0 auto;\n\n  p {\n    @include font('work-sans', $size: 1.6rem, $lineheight: 2.4rem);\n    color: $color-gray;\n    text-align: center;\n  }\n\n  @media (min-height: 90rem) {\n    max-height: 50rem;\n    overflow: scroll;\n  }\n}\n\n.card__search {\n  @include flex($direction: column, $justify: center, $align: center);\n  width: 90%;\n  max-width: 40rem;\n  margin: 0 auto;\n  @include font('work-sans', $size: 1.6rem);\n  color: $color-gray;\n\n  img {\n    width: 6rem;\n    margin-bottom: 2rem;\n  }\n}\n",".header {\n  @include flex($justify: space-between, $align: center);\n\n  @include breakpoint('max-mobile') {\n    flex-direction: column;\n  }\n}\n\n.header__thumb {\n  position: relative;\n  display: block;\n  width: 9rem;\n  height: 9rem;\n  border-radius: 10rem;\n  overflow: hidden;\n\n  @include breakpoint('max-mobile') {\n    margin-bottom: 3rem;\n  }\n}\n\n.header__info {\n  @include font('work-sans', $size: 1.6rem, $lineheight: 2.8rem);\n  width: calc(100% - 12rem);\n\n  @include breakpoint('max-mobile') {\n    width: 90%;\n    text-align: center;\n  }\n\n  p {\n    margin: 0;\n  }\n}\n\n.header__title {\n  @include font('ranchers', $size: 2.6rem);\n  letter-spacing: 0.2rem;\n  color: $color-bay-of-many;\n  margin: 0 0 1rem;\n}\n",".jokes {\n  list-style: none;\n  padding: 0;\n}\n\n.jokes__item {\n  position: relative;\n  background: $color-alabasta;\n  @include font('work-sans', $size: 1.6rem);\n  color: $color-gray;\n  padding: 2rem;\n  margin: 2rem 0 4rem;\n  border-radius: 0.3rem;\n  transition: all ease-in-out 600ms;\n\n  &:before {\n    content: '';\n    background: $color-alabasta;\n    top: -8px;\n    left: 10px;\n    width: 16px;\n    height: 16px;\n    display: block;\n    position: absolute;\n    transform: rotate(45deg);\n  }\n\n  &.v-enter,\n  &.v-leave-to {\n    opacity: 0;\n  }\n\n  &.v-enter-to,\n  &.v-leave {\n    opacity: 1;\n  }\n}\n\n.jokes__action {\n  cursor: pointer;\n  position: absolute;\n  @include flex($justify: center, $align: center);\n  background: $color-white;\n  width: 4rem;\n  height: 4rem;\n  top: -2rem;\n  right: -2rem;\n  border: none;\n  border-radius: 100px;\n  -webkit-box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.05);\n  -moz-box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.05);\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.05);\n  transition: all ease-in-out 300ms;\n\n  &:hover {\n    transform: scale(1.2);\n  }\n\n  svg,\n  img {\n    width: 40%;\n    height: auto;\n  }\n\n  .outline {\n    display: block;\n  }\n\n  .fill {\n    display: none;\n  }\n\n  &.is-saved {\n    .outline {\n      display: none;\n    }\n\n    .fill {\n      display: block;\n    }\n  }\n}\n"],"sourceRoot":""}